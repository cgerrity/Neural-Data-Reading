Metadata for data repository folders, ephys devices, signal banks within
ephys devices, and channels within signal banks are stored in a hierarchicial
set of structures. User-defined metadata may also be added to these
structures.



A "project metadata structure" is a structure containing top-level metadata
and metadata for each of the data folders used by the project. Folders
typically correspond to data captured by one specific piece of equipment or
using one specific software tool.

"folders" is a structure with one field per folder, indexed by user-assigned
  folder label, containing folder metadata structures.

User-defined metadata fields may also be added.



A "folder metadata structure" is a structure containing folder-level metadata
and metadata for each of the signal banks provided by the ephys device or
ephys software suite that created the folder. Signal banks may correspond to
hardware banks (such as specific headstages or groups of I/O channels) or to
virtual banks defined by the ephys software; the metadata representation is
the same.

The folder metadata structure has the following fields:

"path" is the filesystem path of this data folder.
"devicetype" is a label assigned by the LoopUtil library identifying the
  type of device that produced the data (i.e. identifying the helper functions
  needed to read that data).
"banks" is a structure with one field per signal bank, indexed by signal bank
  label, containing signal bank metadata structures.
"nativeorder" (optional) is a structure array containing bank and channel
  numbers in the order in which the underlying device sorted them. These
  are stored in "bank" and "channel" fields, respectively. This is not
  guaranteed to contain all types of channel.
"nativemeta" (optional) is an object containing device-specific metadata in
  its original form. This is typically, but not necessarily, a structure.

Other metadata fields specific to a given device type may also be present.
User-defined metadata fields may also be added.

In the event that one physical folder contains data from multiple ephys
devices, multiple folder metadata structures are produced. These will have
the same "path" value but different folder labels.



A "signal bank metadata structure" is a structure describing multiple
channels that are grouped within one real or virtual "bank" by an ephys
device or ephys software suite (for example, one headstage's analog recording
channels). The following fields are present:

"channels" is a vector containing (integer-valued) channel indices for which
  data is present. These are not guaranteed to be sorted or to be contiguous
  (sparse and unsorted channels are okay).
"samprate" is the data sampling rate in samples per second.
"sampcount" is the number of data samples in each channel's recording. This
  is assumed to be the same for all channels within a bank. For sparse series
  (event data), event timestamps are assumed to be in the range 1..sampcount.
"banktype" is a label assigned by the LoopUtil library identifying the type
  of signal contained within this bank. Defined types are:
  - 'analog' represents continuous-range time-varying signal data.
  - 'integer' represents discrete-range time-varying signal data.
  - 'boolean' represents a signal that is either "on" or "off". Changes may
    be interpreted as events.
  - 'flagvector' is integer data that represents multiple 'boolean' signals.
    Changes may be interpreted as events, and flags may be decoded using the
    "flagdefs" structure if present.
  - 'eventwords' is integer data stored as a sparse time series (event data
    rather than continuous data).
  - 'eventbool' is boolean data stored as a sparse time series (event data
    rather than continuous data).
"flagdefs" (optional) is present for banks of type 'flagvector'. It is a
  structure indexed by flag label containing the integer bit-mask values
  that correspond to each flag in the vector.
"nativetimetype" is the Matlab type name of the underlying "native" timestamp
  format. This is typically a sample count stored as a large integer type.
"nativedatatype" is the Matlab type name of the underlying "native" signal
  data.
"nativezerolevel" is the "native" data value corresponding to a signal value
  of zero. This is typically used with unsigned integer native data types.
"nativescale" is a multiplier used to convert "native" data values to
  floating-point data values in suitable units (volts, amperes, etc).
"fpunits" is a human-readable label indicating measurement units after
  conversion to floating point ('uV', 'V', 'uA', 'A', etc). This may be ''
  for data without meaningful units (integer, boolean, flag vector, etc).
"handle" is an opaque object used by the LoopUtil library to manage file
  I/O state. It typically contains file format details, file descriptors for
  open files, and state flags.
"nativemeta" (optional) is an object containing bank-specific metadata in
  the original device-supplied format. This is typically, but not
  necessarily, a structure.

Other metadata fields specific to a given bank type may also be present,
although this is typically stored in the "handle" object instead.
User-defined metadata fields may also be added.



This is the end of the file.
